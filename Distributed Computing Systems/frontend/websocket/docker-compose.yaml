services:
  kafka1:
    build:
      context: .
    environment:
      - GROUP_ID=1
    depends_on:
      init_topic:
        condition: service_completed_successfully

  kafka2:
    build:
      context: .
    environment:
      - GROUP_ID=2
    depends_on:
      init_topic:
        condition: service_completed_successfully

  kafka:
    image: bitnami/kafka
    container_name: kafka
    ports:
      - 9092:9092
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:2181
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_KRAFT_CLUSTER_ID=MkU3OEVBNTcwNTJENDM2Qk
    healthcheck:
      test: "kafka-topics.sh --bootstrap-server localhost:9092 --list"
      interval: 10s
      timeout: 5s
      retries: 30
      start_period: 0s
      start_interval: 1s

  init_topic:
    image: bitnami/kafka
    command: ["/opt/bitnami/kafka/bin/kafka-topics.sh", "--create", "--bootstrap-server", "kafka:9092", "--replication-factor", "1", "--partitions", "1", "--topic", "updates"]
    depends_on:
      kafka:
        condition: service_healthy